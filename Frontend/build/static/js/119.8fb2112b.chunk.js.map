{"version":3,"file":"static/js/119.8fb2112b.chunk.js","mappings":"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","sources":["APIRequest/SummaryAPIRequest.js","components/Dashboard/Dashboard.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport {ErrorToast} from \"../helper/FormHelper\";\r\nimport store from \"../redux/store/store\";\r\nimport {HideLoader, ShowLoader} from \"../redux/state-slice/settings-slice\";\r\nimport {getToken} from \"../helper/SessionHelper\";\r\nimport {\r\n    SetExpenseChart,\r\n    SetExpenseTotal, SetPurchaseChart, SetPurchaseTotal,\r\n    SetReturnChart,\r\n    SetReturnTotal, SetSaleChart, SetSaleTotal\r\n} from \"../redux/state-slice/dashboard-slice\";\r\n//import {BaseURL} from \"../helper/config\";\r\nconst AxiosHeader={headers:{\"token\":getToken()}}\r\n\r\n\r\nexport async function ExpensesSummary(){\r\n    try {\r\n        debugger;\r\n        store.dispatch(ShowLoader())\r\n        debugger;\r\n        let URL=\"https://inventory-nu-six.vercel.app/api/v1/ExpensesSummary\";\r\n        debugger;\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        debugger;\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            debugger;\r\n            store.dispatch(SetExpenseChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetExpenseTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"ExpensesSummary Empty\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"ExpensesSummary Empty\")\r\n    }\r\n}\r\n\r\nexport async function ReturnSummary(){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=\"https://inventory-nu-six.vercel.app/api/v1/ReturnSummary\";\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetReturnChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetReturnTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"ReturnSummary Empty\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"ReturnSummary Empty\")\r\n    }\r\n}\r\n\r\nexport async function SaleSummary(){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=\"https://inventory-nu-six.vercel.app/api/v1/SalesSummary\";\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetSaleChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetSaleTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"SaleSummary Empty\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"SaleSummary Empty\")\r\n    }\r\n}\r\n\r\nexport async function PurchaseSummary(){\r\n    try {\r\n        store.dispatch(ShowLoader())\r\n        let URL=\"https://inventory-nu-six.vercel.app/api/v1/PurchaseSummary\";\r\n        let res=await axios.get(URL,AxiosHeader)\r\n        store.dispatch(HideLoader())\r\n        if(res.status===200){\r\n            store.dispatch(SetPurchaseChart(res.data['data'][0]['Last30Days']))\r\n            store.dispatch(SetPurchaseTotal(res.data['data'][0]['Total'][0]['TotalAmount']))\r\n        }\r\n        else{\r\n            ErrorToast(\"PurchaseSummary Empty\")\r\n        }\r\n    }\r\n    catch (e){\r\n        store.dispatch(HideLoader())\r\n        ErrorToast(\"PurchaseSummary Empty\")\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {ExpensesSummary, PurchaseSummary, ReturnSummary, SaleSummary} from \"../../APIRequest/SummaryAPIRequest\";\r\nimport {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer} from 'recharts';\r\nimport {useSelector} from \"react-redux\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nconst Dashboard = () => {\r\n\r\n    useEffect(()=>{\r\n        (async () => {\r\n            await ExpensesSummary()\r\n            await SaleSummary()\r\n            await ReturnSummary()\r\n            await PurchaseSummary()\r\n        })();\r\n    },[])\r\n\r\n    let ExpenseChart = useSelector((state) => state.dashboard.ExpenseChart);\r\n    let ExpenseTotal = useSelector((state) => state.dashboard.ExpenseTotal);\r\n\r\n    let SaleChart = useSelector((state) => state.dashboard.SaleChart);\r\n    let SaleTotal = useSelector((state) => state.dashboard.SaleTotal);\r\n\r\n    let ReturnChart = useSelector((state) => state.dashboard.ReturnChart);\r\n    let ReturnTotal = useSelector((state) => state.dashboard.ReturnTotal);\r\n\r\n\r\n    let PurchaseChart = useSelector((state) => state.dashboard.PurchaseChart);\r\n    let PurchaseTotal = useSelector((state) => state.dashboard.PurchaseTotal);\r\n\r\n    return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h5\">\r\n                                    <CurrencyFormat value={ExpenseTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Expense</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                               <span className=\"h5\">\r\n                                    <CurrencyFormat value={SaleTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Sale</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                               <span className=\"h5\">\r\n                                    <CurrencyFormat value={PurchaseTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Purchase</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                               <span className=\"h5\">\r\n                                    <CurrencyFormat value={ReturnTotal} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                                <p>Total Return</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Expense Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={ExpenseChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#CB0C9F\" fill=\"#CB0C9F\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Sales Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={SaleChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Purchase Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={PurchaseChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#00A884\" fill=\"#00A884\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 p-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <span className=\"h6\">Return Last 30 Days</span>\r\n                                <ResponsiveContainer className=\"mt-4\" width=\"100%\" height={200}>\r\n                                    <AreaChart width={500} height={200} data={ReturnChart} margin={{top: 10, right: 30, left: 0, bottom: 0,}}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"_id\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Area type=\"monotone\" dataKey=\"TotalAmount\" stroke=\"#CB0C9F\" fill=\"#CB0C9F\" />\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nexport default Dashboard;"],"names":["AxiosHeader","headers","getToken","Dashboard","useEffect","async","store","dispatch","ShowLoader","URL","res","axios","get","HideLoader","status","SetExpenseChart","data","SetExpenseTotal","ErrorToast","e","ExpensesSummary","SetSaleChart","SetSaleTotal","SaleSummary","SetReturnChart","SetReturnTotal","ReturnSummary","SetPurchaseChart","SetPurchaseTotal","PurchaseSummary","ExpenseChart","useSelector","state","dashboard","ExpenseTotal","SaleChart","SaleTotal","ReturnChart","ReturnTotal","PurchaseChart","PurchaseTotal","_jsxs","className","children","_jsx","CurrencyFormat","value","displayType","thousandSeparator","prefix","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","type","stroke","fill"],"sourceRoot":""}